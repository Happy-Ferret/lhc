foreign i32 printf(i8*, i32)
foreign i32 puts(i8*)

node Indirection *
node Int #

entrypoint: main

main()
    i8* str = @literal "Hello world"
    i32 n = @ccall puts(i8* str)
    i8* pstr = @literal "puts returned %d\n"
    @ccall printf( i8* pstr, i32 n )
    #zero = @literal 0
    *init = @store( Int #zero )
    *fn = @store( inc _ )
    *thunk = @store (twice *fn *init)
    %newVal = @eval( *thunk )
    case %newVal of
      Int #ret ->
        i8* str = @literal "ret is %d"
        i32 t = @cast #ret
        @ccall printf(i8* str, i32 t)

        ; %again = @fetch *thunk
        @exit

% twice(*fn, *x)
    *n = @store (ap *fn *x)
    %fnNode = @eval( *fn )
    %ret = @apply( %fnNode, *n )
    @return( %ret )

% ap(*fn, *x)
    %fnNode = @eval( *fn )
    %ret = @apply( %fnNode, *x )
    @return( %ret )

% inc(*intPtr)
    %intObject = @eval( *intPtr )
    case %intObject of
      Int #intVal ->
        #inc = @literal 1
        #newVal = @add #intVal #inc
        %newObject = @node( Int #newVal )
        @return( %newObject )


